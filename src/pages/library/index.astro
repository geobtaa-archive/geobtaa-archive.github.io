---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import AnchorHeading from '@astrojs/starlight/components/AnchorHeading.astro';
import { getCollection } from 'astro:content';

// Fetch & prepare docs under docs/library/**
const all = (await getCollection('docs', ({ id }) => id.startsWith('library/')))
  .filter((e) => e?.data?.draft !== true && e?.data?.sidebar?.hidden !== true)
  .sort((a, b) => (b.data?.year ?? 0) - (a.data?.year ?? 0));

const PAGE_SIZE = 50;
const page = Math.max(1, Number(Astro.url.searchParams.get('page') || 1));
const totalPages = Math.max(1, Math.ceil(all.length / PAGE_SIZE));
const start = (page - 1) * PAGE_SIZE;
const paged = all.slice(start, start + PAGE_SIZE);
---

<StarlightPage
  frontmatter={{
    title: 'Document Library',
    description: 'All program documents in the library',
    tableOfContents: false,
    prev: false,
    next: false
  }}
>
  <div class="sl-container">
    <p>Browse our full library of program charters, reports, and user reference guides.</code></p>

    <input
      type="search"
      placeholder="Filter by titleâ€¦"
      id="filter"
      style="width:100%; padding:0.6rem 0.8rem; margin:1rem 0; border:1px solid var(--sl-color-hairline); border-radius:8px;"
    />

    <ul id="doclist" style="list-style:none; padding:0; margin:0;">
      {paged.map((entry) => {
  const url = `/${entry.id.replace(/\/index$/, '')}/`;
  const t = entry.data?.title ?? entry.id.split('/').pop();
  const summary = entry.data?.description ?? '';
  const year = entry.data?.year;
  return (
    <li style="padding:0.75rem 0; border-bottom:1px solid var(--sl-color-hairline);">
      <a href={url} class="sl-link" style="font-weight:600;">{t}</a>
      {year && <span style="margin-left:0.5rem; color:var(--sl-color-text-muted);">({year})</span>}
      {summary && (
        <div style="margin-top:0.25rem; color:var(--sl-color-text-muted); font-size:0.95rem;">
          {summary}
        </div>
      )}
    </li>
  );
})}
    </ul>

    {totalPages > 1 && (
      <nav style="display:flex; gap:0.5rem; margin-top:1rem; flex-wrap:wrap;">
        {Array.from({ length: totalPages }, (_, i) => {
          const p = i + 1;
          const href = p === 1 ? '/library/' : `/library/?page=${p}`;
          const isCurrent = p === page;
          return (
            <a
              href={href}
              aria-current={isCurrent ? 'page' : undefined}
              style={`padding:0.4rem 0.7rem; border:1px solid var(--sl-color-hairline); border-radius:6px; text-decoration:none; ${
                isCurrent ? 'background:var(--sl-color-bg-soft); font-weight:600;' : ''
              }`}
            >
              {p}
            </a>
          );
        })}
      </nav>
    )}
  </div>

  <script>
    const input = document.getElementById('filter');
    const list = document.getElementById('doclist');
    const items = Array.from(list.querySelectorAll('li'));
    input?.addEventListener('input', (e) => {
      const q = e.target.value.toLowerCase();
      items.forEach((li) => {
        const text = li.textContent.toLowerCase();
        li.style.display = text.includes(q) ? '' : 'none';
      });
    });
  </script>
</StarlightPage>