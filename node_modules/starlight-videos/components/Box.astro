---
import { Icon } from '@astrojs/starlight/components'
import type { ComponentProps } from 'astro/types'

interface Props {
  icon?: ComponentProps<typeof Icon>['name'] | undefined
  title: string
  variant?: 'caution' | 'danger' | 'minimal' | 'note' | 'success' | 'tip' | undefined
}

const defaultIcons = {
  caution: 'warning',
  danger: 'error',
  minimal: 'list-format',
  note: 'information',
  success: 'approve-check-circle',
  tip: 'rocket',
} as const

const { icon, title, variant = 'minimal' } = Astro.props
---

<div class:list={['sl-videos-box', `sl-videos-box-${variant}`]}>
  <p><Icon name={icon ?? defaultIcons[variant]} />{title}</p>
  <slot />
</div>

<style>
  .sl-videos-box {
    background-color: var(--sl-videos-box-bg-color);
    border-inline-start: 0.25rem solid var(--sl-videos-box-border-color);
    color: var(--sl-color-white);
    padding: 1rem;
  }

  .sl-videos-box-caution {
    --sl-videos-box-alt-color: var(--sl-color-orange-high);
    --sl-videos-box-bg-color: var(--sl-color-orange-low);
    --sl-videos-box-border-color: var(--sl-color-orange);
  }

  .sl-videos-box-danger {
    --sl-videos-box-alt-color: var(--sl-color-red-high);
    --sl-videos-box-bg-color: var(--sl-color-red-low);
    --sl-videos-box-border-color: var(--sl-color-red);
  }

  .sl-videos-box-minimal {
    --sl-videos-box-alt-color: hsl(224 24% 86%);
    --sl-videos-box-bg-color: hsl(224 14% 16%);
    --sl-videos-box-border-color: hsl(224 4% 66%);
  }

  :root[data-theme='light'] .sl-videos-box-minimal {
    --sl-videos-box-alt-color: hsl(224 20% 34%);
    --sl-videos-box-bg-color: hsl(224 20% 94%);
    --sl-videos-box-border-color: hsl(224 20% 74%);
  }

  .sl-videos-box-note {
    --sl-videos-box-alt-color: var(--sl-color-blue-high);
    --sl-videos-box-bg-color: var(--sl-color-blue-low);
    --sl-videos-box-border-color: var(--sl-color-blue);
  }

  .sl-videos-box-success {
    --sl-videos-box-alt-color: var(--sl-color-green-high);
    --sl-videos-box-bg-color: var(--sl-color-green-low);
    --sl-videos-box-border-color: var(--sl-color-green);
  }

  .sl-videos-box-tip {
    --sl-videos-box-alt-color: var(--sl-color-purple-high);
    --sl-videos-box-bg-color: var(--sl-color-purple-low);
    --sl-videos-box-border-color: var(--sl-color-purple);
  }

  p {
    align-items: center;
    color: var(--sl-videos-box-alt-color);
    display: flex;
    font-size: var(--sl-text-h5);
    font-weight: 600;
    gap: 0.5rem;
    line-height: var(--sl-line-height-headings);
  }

  p :global(svg) {
    flex-shrink: 0;
    height: 1.375rem;
    width: 1.375rem;
  }

  .sl-videos-box > :global(:is(ol, ul)) {
    padding-inline-start: 1.4375rem;
  }

  .sl-videos-box > :global(:is(ol, ul) > li:not(:has(label))) {
    padding-inline-start: 0.375rem;
  }

  .sl-videos-box > :global(:is(ol, ul) > li::marker) {
    color: var(--sl-color-text);
  }

  .sl-videos-box :global(ul:has(li > label)) {
    list-style-type: none;
    padding-inline-start: 0.1875rem;
  }

  .sl-videos-box :global(label) {
    align-items: flex-start;
    display: flex;
    gap: 0.625rem;
    margin: 0 !important;
  }

  .sl-videos-box :global(label :is(input[type='checkbox'], input[type='radio'])) {
    accent-color: var(--sl-videos-box-alt-color);
    flex-shrink: 0;
    height: 1.0625rem;
    margin-top: 0.375rem;
    width: 1.0625rem;
  }
</style>
