---
import starlightConfig from 'virtual:starlight/user-config'

import Page from '../../../../node_modules/starlight-blog/components/Page.astro'
import Posts from '../../../../node_modules/starlight-blog/components/Posts.astro'
import { getBlogEntries } from '../../../../node_modules/starlight-blog/libs/content'
import type { StarlightBlogEntry } from '../../../../node_modules/starlight-blog/libs/content'
import { DefaultLocale, type Locale } from '../../../../node_modules/starlight-blog/libs/i18n'
import { getPageProps } from '../../../../node_modules/starlight-blog/libs/page'
import { getBlogTitle } from '../../../../node_modules/starlight-blog/libs/title'

export const prerender = true

type YearPageProps = {
  entries: StarlightBlogEntry[]
  locale: Locale
  year: number
}

type StaticPath = {
  params: { year: string }
  props: YearPageProps
}

export async function getStaticPaths(): Promise<StaticPath[]> {
  const locales: Locale[] = starlightConfig.isMultilingual
    ? Object.keys(starlightConfig.locales).map((key) => (key === 'root' ? undefined : key))
    : [DefaultLocale]

  const paths: StaticPath[] = []

  for (const locale of locales) {
    const entries = await getBlogEntries(locale)
    const yearBuckets = new Map<number, StarlightBlogEntry[]>()

    for (const entry of entries) {
      const year = entry.data.date.getFullYear()
      const existing = yearBuckets.get(year)
      if (existing) {
        existing.push(entry)
      } else {
        yearBuckets.set(year, [entry])
      }
    }

    const sortedYears = [...yearBuckets.entries()].sort(([a], [b]) => b - a)

    for (const [year, yearEntries] of sortedYears) {
      const sortedEntries = yearEntries.sort((a, b) => b.data.date.getTime() - a.data.date.getTime())

      paths.push({
        params: { year: String(year) },
        props: {
          entries: sortedEntries,
          locale,
          year,
        },
      })
    }
  }

  return paths
}

const { entries, locale, year } = Astro.props as YearPageProps

const pageProps = getPageProps(`${getBlogTitle(locale)} â€“ ${year}`)
---

<Page {...pageProps}>
  <header slot="hero">
    <h1>{year}</h1>
    <p>Showing posts published in {year}.</p>
  </header>
  <Posts entries={entries} locale={locale} />
</Page>

<style>
  header {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  header p {
    color: var(--sl-color-gray-2);
    max-width: 45ch;
  }
</style>
