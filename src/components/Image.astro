---
// src/components/Image.astro
import type { ImageMetadata } from 'astro:assets';

interface Props {
  src: Promise<{ default: ImageMetadata }> | ImageMetadata | string;
  alt: string;
  width?: string;
  height?: string;
  align?: 'left' | 'center' | 'right';
  caption?: string;
  class?: string; // Allow passing a class
}

const {
  src: srcProp,
  alt,
  width: displayWidth = 'auto', // Use a different name for display width
  height,
  align = 'left',
  caption,
  class: className,
  ...rest
} = Astro.props;

const resolvedSrc = await srcProp;
const image = resolvedSrc.default ?? resolvedSrc;

// These are the full dimensions for the lightbox
const fullWidth = image.width;
const fullHeight = image.height;

const figureStyles = {
  width: displayWidth === 'auto' ? 'max-content' : displayWidth,
  margin: '1.5rem 0',
};

if (align === 'center') {
  figureStyles.marginLeft = 'auto';
  figureStyles.marginRight = 'auto';
} else if (align === 'right') {
  figureStyles.marginLeft = 'auto';
  figureStyles.marginRight = '0';
} else {
  figureStyles.marginLeft = '0';
  figureStyles.marginRight = 'auto';
}

const imageStyles = {
  width: '100%',
  height,
  display: 'block',
  borderRadius: '0.5rem',
};
---

<figure style={figureStyles} class:list={[className]}>
  <a 
    href={image.src}
    data-pswp-width={fullWidth}
    data-pswp-height={fullHeight}
    target="_blank"
    class="starlight-image-zoom"
  >
    <img src={image.src} alt={alt} style={imageStyles} {...rest} />
  </a>
  
  {caption && (
    <figcaption>{caption}</figcaption>
  )}
</figure>

<style>
  figcaption {
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: var(--sl-color-gray-3);
    text-align: center;
  }
</style>